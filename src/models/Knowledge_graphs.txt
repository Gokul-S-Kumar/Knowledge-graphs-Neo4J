load csv with headers from "file:///WA_Fn-UseC_-HR-Employee-Attrition.csv" as row
with toInteger(row.DistanceFromHome) as DistanceFromHome, row.OverTime as OverTime, toInteger(row.RelationshipSatisfaction) as RelationshipSatisfaction, row.BusinessTravel as BusinessTravel, toInteger(row.EnvironmentSatisfaction) as EnvironmentSatisfaction, toInteger(row.EmployeeCount) as EmployeeCount, row.Gender as Gender, row.Attrition as Attrition, toInteger(row.HourlyRate) as HourlyRate, toInteger(row.YearsAtCompany) as YearsAtCompany, row.EducationField as EducationField, row.Department as Department, toInteger(row.Education) as Education, toInteger(row.TotalWorkingYears) as TotalWorkingYears, toInteger(row.MonthlyRate) as MonthlyRate, toInteger(row.PercentSalaryHike) as PercentSalaryHike, toInteger(row.YearsInCurrentRole) as YearsInCurrentRole, toInteger(row.MonthlyIncome) as MonthlyIncome, toInteger(row.Age) as Age, toInteger(row.JobInvolvement) as JobInvolvement, toInteger(row.StandardHours) as StandardHours, toInteger(row.JobSatisfaction) as JobSatisfaction, toInteger(row.JobLevel) as JobLevel, row.Over18 as Over18, toInteger(row.EmployeeNumber) as EmployeeNumber, toInteger(row.PerformanceRating) as PerformanceRating, toInteger(row.YearsSinceLastPromotion) as YearsSinceLastPromotion, toInteger(row.DailyRate) as DailyRate, row.JobRole as JobRole, toInteger(row.TrainingTimesLastYear) as TrainingTimesLastYear, row.MaritalStatus as MaritalStatus, toInteger(row.YearsWithCurrManager) as YearsWithCurrManager, toInteger(row.NumCompaniesWorked) as NumCompaniesWorked, toInteger(row.WorkLifeBalance) as WorkLifeBalance, toInteger(row.StockOptionLevel) as StockOptionLevel
merge (e:Employee {EmployeeNumber:EmployeeNumber})
	set e.DistanceFromHome = DistanceFromHome, e.OverTime = OverTime, e.RelationshipSatisfaction = RelationshipSatisfaction, e.BusinessTravel = BusinessTravel,e.EnvironmentSatisfaction = EnvironmentSatisfaction, e.EmployeeCount = EmployeeCount, e.Gender = Gender, e.HourlyRate = HourlyRate, e.YearsAtCompany = YearsAtCompany, e.EducationField = EducationField, e.Department = Department, e.Education = Education, e.TotalWorkingYears = TotalWorkingYears, e.MonthlyRate = MonthlyRate, e.PercentSalaryHike = PercentSalaryHike, e.YearsInCurrentRole = YearsInCurrentRole, e.MonthlyIncome = MonthlyIncome, e.Age = Age, e.JobInvolvement = JobInvolvement, e.StandardHours = StandardHours, e.JobSatisfaction = JobSatisfaction, e.JobLevel = JobLevel, e.Over18 = Over18, e.PerformanceRating = PerformanceRating, e.YearsSinceLastPromotion = YearsSinceLastPromotion, e.DailyRate = DailyRate, e.JobRole = JobRole, e.TrainingTimesLastYear = TrainingTimesLastYear, e.MaritalStatus = MaritalStatus, e.YearsWithCurrManager = YearsWithCurrManager, e.NumCompaniesWorked = NumCompaniesWorked, e.WorkLifeBalance = WorkLifeBalance, e.StockOptionLevel = StockOptionLevel

load csv with headers from "file:///WA_Fn-UseC_-HR-Employee-Attrition.csv" as row
with row.BusinessTravel as BusinessTravel, row.EmployeeNumber as EmployeeNumber, row.Attrition as Attrition
where Attrition = "No"
merge (n: AttritionNoBusinessTravel {BusinessTravel : BusinessTravel})
    set n.Attrition = Attrition, n.EmployeeNumber = EmployeeNumber, n.BusinessTravel = BusinessTravel

match (a:Employee), (b:AttritionNoBusinessTravel)
where a.BusinessTravel = b.BusinessTravel and a.Attrition = "No"
create (a)-[r:AttritionNoBusinessTravel]->(b)
return type(r)